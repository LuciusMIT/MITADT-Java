class Account {
    int accountNumber;
    double balance;
    String accountHolderName;

    public Account(int accountNumber, double balance, String accountHolderName) {
        this.accountNumber = accountNumber;
        this.balance = balance;
        this.accountHolderName = accountHolderName;
    }

    public void deposit(double amount) {
        if (amount > 0) {
            balance += amount;
            System.out.println("Deposited $" + amount + ". New balance: $" + balance);
        } else {
            System.out.println("Invalid deposit amount.");
        }
    }

    public void withdraw(double amount) {
        if (amount > 0 && amount <= balance) {
            balance -= amount;
            System.out.println("Withdrew $" + amount + ". New balance: $" + balance);
        } else {
            System.out.println("Insufficient balance or invalid withdrawal amount.");
        }
    }

    public void generateStatement() {
        System.out.println("Account Statement");
        System.out.println("Account Number: " + accountNumber);
        System.out.println("Account Holder: " + accountHolderName);
        System.out.println("Balance: $" + balance);
    }
}

class SavingsAccount extends Account {
    double interestRate;

    public SavingsAccount(int accountNumber, double balance, String accountHolderName, double interestRate) {
        super(accountNumber, balance, accountHolderName);
        this.interestRate = interestRate;
    }

    public double calculateInterest() {
        return (balance * interestRate) / 100;
    }

    @Override
    public void generateStatement() {
        super.generateStatement();
        System.out.println("Interest Rate: " + interestRate + "%");
        System.out.println("Estimated Interest: $" + calculateInterest());
    }
}

class CheckingAccount extends Account {
    public CheckingAccount(int accountNumber, double balance, String accountHolderName) {
        super(accountNumber, balance, accountHolderName);
    }

    @Override
    public void generateStatement() {
        super.generateStatement();
        System.out.println("Account Type: Checking Account");
    }
}

class FixedDepositAccount extends Account {
    double interestRate;
    int depositPeriod; // in months

    public FixedDepositAccount(int accountNumber, double balance, String accountHolderName, double interestRate, int depositPeriod) {
        super(accountNumber, balance, accountHolderName);
        this.interestRate = interestRate;
        this.depositPeriod = depositPeriod;
    }

    public double calculateInterest() {
        return (balance * interestRate * depositPeriod) / 100;
    }

    @Override
    public void generateStatement() {
        super.generateStatement();
        System.out.println("Interest Rate: " + interestRate + "%");
        System.out.println("Deposit Period: " + depositPeriod + " months");
        System.out.println("Estimated Interest: $" + calculateInterest());
    }
}

class Main {
    public static void main(String[] args) {
        SavingsAccount savings = new SavingsAccount(101, 5000.0, "John Doe", 3.5);
        CheckingAccount checking = new CheckingAccount(102, 2000.0, "Jane Smith");
        FixedDepositAccount fixedDeposit = new FixedDepositAccount(103, 10000.0, "Alice Brown", 5.0, 12);

        savings.deposit(1000);
        savings.withdraw(500);
        savings.generateStatement();

        checking.deposit(500);
        checking.withdraw(300);
        checking.generateStatement();

        fixedDeposit.deposit(2000);
        fixedDeposit.withdraw(1000);
        fixedDeposit.generateStatement();
    }
}
